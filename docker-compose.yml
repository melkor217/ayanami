version: '2'

services:
  ayanami:
    build: .
    image: ayanami
    env_file: ./secrets.env
    links:
      - redis
      - mysql
      - graphite
    command: >
                 bash -lc "./wait-for-it.sh -t 0 redis:6379; ./wait-for-it.sh -t 0 mysql:3306;
                 passenger start"
    restart: unless-stopped
    ports:
      - "127.0.0.1:3456:3000"
  workers:
    restart: unless-stopped
    build: .
    image: ayanami
    env_file: ./secrets.env
    links:
      - redis
      - mysql
      - graphite
    command: >
                 bash -lc "./wait-for-it.sh -t 0 redis:6379; ./wait-for-it.sh -t 0 mysql:3306;
                 rake db:check || rake db:create db:structure:load;
                 rake db:migrate;
                 rails runner 'HeatWeaponCacheJob.perform_later';
                 bundle exec sidekiq -C config/sidekiq.yml"
  mysql:
    env_file: ./secrets.env
    image: mysql
    entrypoint: /entrypoint.sh
    command: mysqld
    restart: unless-stopped
    ports:
      - "0.0.0.0:13306:3306"
    volumes:
      - /srv/ayanami/mysql:/var/lib/mysql
  redis:
    volumes:
      - redis-data:/data
    image: redis
    restart: unless-stopped
    command: redis-server --appendonly yes
  noxus-web:
    restart: unless-stopped
    env_file: ./secrets.env
    links:
      - mysql
    build: noxus
    ports:
      - "127.0.0.1:3457:80"
  noxus-daemon:
    restart: unless-stopped
    env_file: ./secrets.env
    links:
      - mysql
    build: noxus
    command: >
                bash -lc "envsubst < ./hlxce/scripts/hlstats.conf.docker-env > ./hlxce/scripts/hlstats.conf;
                cd ./hlxce/scripts/;
                ./hlstats.pl --configfile=hlstats.conf --port=27500;"
    ports:
      - "0.0.0.0:27501:27500/udp"
  noxus-cron:
    restart: unless-stopped
    env_file: ./secrets.env
    links:
      - mysql
    build: noxus
    command: >
                bash -lc "envsubst < ./hlxce/scripts/hlstats.conf.docker-env > ./hlxce/scripts/hlstats.conf;
                cd ./hlxce/scripts/;
                cron && tail -f /var/log/cron.log;"
  sourcebans:
    restart: unless-stopped
    env_file: ./secrets.env
    links:
      - mysql
    build: sourcebans
    ports:
      - "127.0.0.1:3460:80"
  graphite:
    restart: unless-stopped
    image: hopsoft/graphite-statsd
    ports:
      - "127.0.0.1:33456:80"
    volumes:
      - graphite-data:/opt/graphite/storage
      - graphite-logs:/var/log/graphite
  stats:
    restart: unless-stopped
    build: ./docker-docker-stats-statsd/
    privileged: true
    environment:
      STATSD_HOST: graphite
      STATSD_PORT: 8125
      STATSD_PREFIX: docker.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - graphite
  lb:
    restart: unless-stopped
    image: dockercloud/haproxy:latest
    links:
      - ayanami
    environment:
      TCP_PORTS: 3000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "127.0.0.1:3459:80"

volumes:
  graphite-data: {}
  graphite-logs: {}
  redis-data: {}
  mysql-data: {}
